error_log                       /var/log/nginx/error.log warn;

events {
    worker_connections          1024;
}

http {
  include                     /etc/nginx/mime.types;
  default_type                application/octet-stream;
  sendfile                    on;
  access_log                  /var/log/nginx/access.log;
  keepalive_timeout           300000;
  types_hash_max_size         300000;
  proxy_connect_timeout       300000;
  proxy_send_timeout          300000;
  proxy_read_timeout          300000;
  send_timeout                300000;

  upstream login_servers {
    server 192.168.3.1:3000;
    server 192.168.3.2:3000;
  }

  upstream ingress_servers {
    server 192.168.2.1:3000;
    server 192.168.2.2:3000;
    server 192.168.2.3:3000;
    server 192.168.2.4:3000;
  }

  server {
    listen 80;
    server_name r7platform.moph.go.th;
    client_max_body_size    320m;

    location / {
      root /usr/share/nginx/html;
      index index.html;
    }

    #=========== API Ingress ============
    location /send/ {
      proxy_pass http://ingress_servers;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      rewrite ^/send/(.*)$ /$1 break;
    }

    #=========== API Login ============
    location /request/ {
      proxy_pass http://login_servers;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      rewrite ^/request/(.*)$ /$1 break;
    }

    #======== Web User management =========
    location /users/ {
      proxy_pass http://192.168.6.2;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
      include /etc/nginx/mime.types;
      rewrite ^/users/(.*)$ /$1 break;
    }

    #======== API User management =========
    location /api/users/ {
      proxy_pass http://192.168.6.1:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      rewrite ^/api/users/(.*)$ /$1 break;
    }

    #========= Web Portal ============
    location /portal/ {
      proxy_pass http://192.168.7.2;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
      include /etc/nginx/mime.types;
      rewrite ^/portal/(.*)$ /$1 break;
    }
    
    #======= API Portal ==========
    location /api/portal/ {
      proxy_pass http://192.168.7.1:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      rewrite ^/api/portal/(.*)$ /$1 break;
    }

    #========= Web Queue UI ============
    location /queues/ {
      proxy_pass http://192.168.1.2:3000;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
      include /etc/nginx/mime.types;
      rewrite ^/queues/(.*)$ /$1 break;
    }

  }

}